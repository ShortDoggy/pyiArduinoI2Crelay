#encoding=utf-8
# Данный пример постоянно меняет сигнал ШИМ на всех каналах.
from math import sin, cos, radians              # Из модуля математических функций импортируем синус, косинус и радианы 
from time import sleep                          # Импортируем функцию ожидания 
from pyiArduinoI2Crelay import *                # Подключаем модуль для работы с ключём
pwrfet = pyiArduinoI2Crelay(0x09)               # Объявляем объект pwrfet
                                                # Если объявить объект без указания адреса (pwrfet = pyiArduinoI2Crelay()), то адрес будет найден автоматически.
val = [0, 0, 0, 0]                              # Определяем начальные аналоговые значение в списке.
channels = (1, 2, 3, 4)                         # Определяем номера каналов в кортеже 
                                                #
pwrfet.analogWrite(ALL_CHANNEL, LOW)            # Отключаем все каналы.
print("Меняем сигнал ШИМ"                       #
      " на на всех каналах."                    #
      " Нажмите ctrl+c для"                     #
      " остановки")                             #
                                                #
try:                                            #
    while True:                                 #
         for x in range(1, 360):                # От 1 до 360 градусов
            sleep(0.001)                        # Чем выше задержка, тем плавнее меняется аналоговый уровень.               
            val[0] = cos(                       # Берем косинус угла 
                        radians(x * x))         # Преобразуем углы в радианы
            val[1] = sin(                       # Сдвиг на 90 градусов относительно val[0]
                        radians(x * x))         # 
            val[2] = -cos(                      # Сдвиг на 180 градусов относительно val[0]
                         radians(x * x))        # 
            val[3] = -sin(                      # Сдвиг на 270 градусов относительно val[0]
                         radians(x * x))        # 
            for i, j in zip(channels, val):     # Вызываем функцию zip для итерирования двух контейнеров
                pwm = int(1 - j) * 2047         # Преобразуем интервал от -1 до 1 в интервал от 0 до 4094 
                pwrfet.analogWrite(i, pwm)      # Допустимые значения ШИМ - от 0 до 4095.
                                       
except KeyboardInterrupt:                       # Если сценарий прерван с клавиатуры (ctrl+c)
    pwrfet.analogWrite(ALL_CHANNEL, LOW)        # Выключаем все каналы
    print()
    print("программа остановлена,"
          " все каналы отключены")
